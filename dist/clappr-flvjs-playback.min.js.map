{"version":3,"sources":["webpack://FLVJSPlayback/webpack/universalModuleDefinition","webpack://FLVJSPlayback/webpack/bootstrap","webpack://FLVJSPlayback/external {\"amd\":\"clappr\",\"commonjs\":\"clappr\",\"commonjs2\":\"clappr\",\"root\":\"Clappr\"}","webpack://FLVJSPlayback/external \"flvjs\"","webpack://FLVJSPlayback/./src/main.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","MIMETYPES","FLVJSPlayback","options","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","autoPlay","play","HTML5Video","_player","resource","mimeType","arguments","length","undefined","resourceParts","split","match","isFLV","toLowerCase","indexOf","flvjs","isSupported","VERSION","mediaDataSource","type","url","src","flvjsConfig","playback","_isLive","isLive","enableLogging","LoggingControl","enableAll","createPlayer","on","Events","ERROR","_onError","attachMediaElement","el","load","details","data","Log","error","concat","trigger","PLAYBACK_ERROR","destroy","isReady","Playback","LIVE","VOD","_setup","_get","_destroy"],"mappings":"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","file":"clappr-flvjs-playback.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"clappr\"), require(\"flvjs\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"clappr\", \"flvjs\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FLVJSPlayback\"] = factory(require(\"clappr\"), require(\"flvjs\"));\n\telse\n\t\troot[\"FLVJSPlayback\"] = factory(root[\"Clappr\"], root[\"flvjs\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","import { HTML5Video, Events, Log, Playback } from 'clappr'\nimport flvjs from 'flv.js'\n\nconst MIMETYPES = ['video/flv', 'video/x-flv']\nconst EXTENSION = 'flv'\n\nclass FLVJSPlayback extends HTML5Video {\n  get name () {\n    return 'flvjs_playback'\n  }\n\n  get isHTML5Video () {\n    return true\n  }\n\n  get flvjs () {\n    return this._player\n  }\n\n  static get version () {\n    return VERSION // eslint-disable-line\n  }\n\n  static canPlay (resource, mimeType = '') {\n    const resourceParts = (resource.split('?')[0].match(/.*\\.(.*)$/) || [])\n    const isFLV = ((resourceParts.length > 1 && resourceParts[1].toLowerCase() === EXTENSION) ||\n                    MIMETYPES.indexOf(mimeType) !== -1)\n    return flvjs.isSupported() && isFLV\n  }\n\n  constructor (options) {\n    super(options)\n    options.autoPlay && this.play()\n  }\n\n  // skipping setup `setupSrc` on tag video\n  _setupSrc () {}\n\n  _setup () {\n    const mediaDataSource = {\n      type: EXTENSION,\n      url: this.options.src\n    }\n    const flvjsConfig = this.options.playback.flvjsConfig || {}\n    this._isLive = flvjsConfig.isLive || false\n\n    const enableLogging = flvjsConfig.enableLogging || false\n    flvjs.LoggingControl.enableAll = enableLogging\n\n    this._player = flvjs.createPlayer(mediaDataSource, flvjsConfig)\n    this._player.on(flvjs.Events.ERROR, this._onError.bind(this))\n    this._player.attachMediaElement(this.el)\n    this._player.load()\n  }\n\n  _onError (type, details, data) {\n    Log.error(`flvjs: ${type}: ${details}`, data)\n    this.trigger(Events.PLAYBACK_ERROR, { type, details, data }, this.name)\n  }\n\n  _destroy () {\n    if (!this._player) {\n      return\n    }\n\n    this._player.destroy()\n    delete this._player\n  }\n\n  getPlaybackType () {\n    return (this.isReady && this._isLive ? Playback.LIVE : Playback.VOD)\n  }\n\n  play () {\n    !this._player && this._setup()\n    super.play()\n  }\n\n  stop () {\n    super.stop()\n    this._destroy()\n  }\n\n  destroy () {\n    this._destroy()\n    super.destroy()\n  }\n}\n\nexport default FLVJSPlayback\n"],"sourceRoot":""}